name: CI/CD Workflow

on:
  push:
    branches:
      - main # Trigger on push to the 'main' branch
  pull_request:
    branches:
      - main # Trigger on PRs targeting the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest # Run on the latest Ubuntu image

    steps:
      # Checkout the code from GitHub repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18" # Use Node.js version 18

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Build the application
      - name: Build the application
        run: npm run build

      # Debugging directory and permissions
      - name: Check directory existence and permissions
        run: |
          if (Test-Path "C:\inetpub\wwwroot") {
            Write-Host "Directory exists."
          } else {
            Write-Host "Directory does not exist!"
          }
        shell: pwsh

      - name: Ensure weather-app directory exists
        run: |
          if (-not (Test-Path "C:\inetpub\wwwroot\weather-app")) {
            New-Item -Path "C:\inetpub\wwwroot\weather-app" -ItemType Directory
          }
        shell: pwsh
        if: runner.os == 'Windows'

      - name: Copy files to IIS directory
        run: |
          xcopy /E /I /H /Y ${{ github.workspace }}/dist/* C:\inetpub\wwwroot\weather-app\
        shell: pwsh
        if: runner.os == 'Windows'

      - name: Set permissions for IIS_IUSRS
        run: |
          icacls "C:\inetpub\wwwroot\weather-app" /grant IIS_IUSRS:(OI)(CI)F /T
        shell: pwsh
        if: runner.os == 'Windows'

      # Set up Docker for building and pushing the image
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub (replace with your Docker Hub credentials)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # Store your Docker Hub username in GitHub Secrets
          password: ${{ secrets.DOCKER_PASSWORD }} # Store your Docker Hub password in GitHub Secrets

      # Build Docker image
      - name: Build Docker image
        run: docker build --no-cache -t ${{ secrets.DOCKER_USERNAME }}/weather-app:$GITHUB_SHA .

      # Push Docker image to Docker Hub
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/weather-app:$GITHUB_SHA

    # Deploy (Optional) - Add your deployment step here (e.g., push to AWS, Heroku, etc.)
